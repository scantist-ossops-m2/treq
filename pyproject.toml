[build-system]
requires = [
  "setuptools >= 35.0.2",
  "wheel >= 0.29.0",

  # What follows is an exact copy of the runtime dependencies, because (A)
  # incremental needs to be able to import `treq` to be able to import
  # `treq.__version__` (see `tools.setuptools.dynamic` below), and (B) the
  # `treq` module is set up such that everything is eagerly imported into the
  # top-level namespace and thus sucks in every other dependency that we
  # require.
  "incremental >= 21.3.0",
  "requests >= 2.1.0",
  "hyperlink >= 21.0.0",
  "Twisted[tls] >= 22.10.0",  # For #11635
  "attrs",
  "typing_extensions >= 3.10.0",
  "multipart",
]
build-backend = "setuptools.build_meta"

[project]
name = "Treq"
dynamic = [
    "version",
]

description = "High-level Twisted HTTP Client API"
readme = "README.rst"
license = { text = "MIT License" }
# When updating this value, make sure our CI matrix includes a matching minimum version.
requires-python = ">=3.8.0"
authors = [
  { name = "David Reid", email = "dreid@dreid.org" },
]
maintainers = [
  { name = "Tom Most", email = "twm@freecog.net" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: Twisted",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "incremental >= 21.3.0",
  "requests >= 2.1.0",
  "hyperlink >= 21.0.0",
  "Twisted[tls] >= 22.10.0",  # For #11635
  "attrs",
  "typing_extensions >= 3.10.0",
  "multipart",
]

[project.optional-dependencies]
dev = [
    "pep8",
    "pyflakes",
    "httpbin==0.7.0",
    "werkzeug==2.0.3",
]

docs = [
    "sphinx<7.0.0",  # Removal of 'style' key breaks RTD.
]

[project.urls]
Source = "https://github.com/twisted/treq"

[tool.setuptools.packages.find]
where = ["src"]
[tool.setuptools.dynamic]
version = {attr = "treq.__version__"}

[tool.towncrier]
package = "treq"
package_dir = "src"
filename = "CHANGELOG.rst"
directory = "changelog.d"
title_format = "{version} ({project_date})"
issue_format = "`#{issue} <https://github.com/twisted/treq/issues/{issue}>`__"

[tool.ruff]
line-length = 88

[tool.mypy]
namespace_packages = true
plugins = "mypy_zope:plugin"

check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_expr = false
disallow_any_generics = false
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = false
disallow_untyped_decorators = false
strict_equality = false

[[tool.mypy.overrides]]
module = [
    "treq.content",
]
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "treq.api",
    "treq.auth",
    "treq.client",
    "treq.multipart",
    "treq.response",
    "treq.testing",
    "treq.test.test_api",
    "treq.test.test_auth",
    "treq.test.test_client",
    "treq.test.test_content",
    "treq.test.test_multipart",
    "treq.test.test_response",
    "treq.test.test_testing",
    "treq.test.test_treq_integration",
    "treq.test.util",
]
disallow_untyped_defs = false
check_untyped_defs = false

[[tool.mypy.overrides]]
module = [
    "treq.test.local_httpbin.child",
    "treq.test.local_httpbin.parent",
    "treq.test.local_httpbin.shared",
    "treq.test.local_httpbin.test.test_child",
    "treq.test.local_httpbin.test.test_parent",
    "treq.test.local_httpbin.test.test_shared",
]
disallow_untyped_defs = false
check_untyped_defs = false
ignore_missing_imports = true
